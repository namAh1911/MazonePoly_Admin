import React, { useEffect, useState } from "react";
import axios from "axios";
import "./StyleWeb/Products.css";
import { useNavigate } from "react-router-dom";
import { FaEye, FaEdit, FaTrash } from "react-icons/fa";
import ProductCard from "../components/ProductCard";
import { BASE_URL } from "../config";

export default function Products() {
  const [products, setProducts] = useState([]);
  const navigate = useNavigate();

  useEffect(() => {
    fetchProducts();
  }, []);

  const fetchProducts = async () => {
    try {
      const res = await axios.get(`${BASE_URL}/api/products`);
      setProducts(res.data);
    } catch (err) {
      console.error("L·ªói t·∫£i s·∫£n ph·∫©m", err);
    }
  };

  // H√†m toggle tr·∫°ng th√°i n·ªïi b·∫≠t
  const handleToggleFeatured = async (id) => {
    try {
      const res = await axios.put(`${BASE_URL}/api/products/${id}/featured`);
      const updatedFeatured = res.data.is_featured;
      alert("C·∫≠p nh·∫≠t tr·∫°ng th√°i n·ªïi b·∫≠t th√†nh c√¥ng");
      // C·∫≠p nh·∫≠t l·∫°i danh s√°ch s·∫£n ph·∫©m trong state
      setProducts((prev) =>
        prev.map((p) => (p._id === id ? { ...p, is_featured: updatedFeatured } : p))
      );
    } catch (error) {
      alert("C·∫≠p nh·∫≠t tr·∫°ng th√°i n·ªïi b·∫≠t th·∫•t b·∫°i");
      console.error(error);
    }
  };

  const handleDeleteProduct = async (id) => {
    const confirm = window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° s·∫£n ph·∫©m n√†y?");
    if (!confirm) return;

    try {
      await axios.delete(`${BASE_URL}/api/products/${id}`);
      setProducts(products.filter((p) => p._id !== id)); // C·∫≠p nh·∫≠t danh s√°ch
      alert("ƒê√£ xo√° s·∫£n ph·∫©m!");
    } catch (err) {
      console.error("L·ªói xo√° s·∫£n ph·∫©m", err);
      alert("Kh√¥ng th·ªÉ xo√° s·∫£n ph·∫©m");
    }
  };

  return (
    <div className="product-page">
      <div style={{ background: "#fff", marginBottom: "10px", padding: "7px", borderRadius: "10px" }}>
        <div className="product-header">
          <h2>Qu·∫£n L√Ω S·∫£n Ph·∫©m</h2>
          <button className="btn-add" onClick={() => navigate("/products/add")}>
            + Th√™m s·∫£n ph·∫©m m·ªõi
          </button>
        </div>

        <div className="product-search">
          <input name="ip-search" placeholder="...T√¨m theo t√™n s·∫£n ph·∫©m" />
          <select>
            <option>T√™n A-Z</option>
            <option>T√™n Z-A</option>
            <option>Gi√° tƒÉng</option>
            <option>Gi√° gi·∫£m</option>
          </select>
          <button className="btn-search">T√¨m ki·∫øm</button>
        </div>
      </div>

      <div className="product-scroll-container">
        <div className="product-list">
          {products.map((prod) => (
            <div className="product-card" key={prod._id}>
              <ProductCard key={prod._id} product={prod} />
              <div className="product-info">
                <h3>{prod.name}</h3>

                <div className="info-boxes">
                  <div className="box">
                    <p>Danh m·ª•c: {prod.category}</p>
                    <p>Th∆∞∆°ng hi·ªáu: {prod.brand}</p>
                    <p>Gi√° b√°n: {prod.price?.toLocaleString()}‚Ç´</p>

                  </div>
                </div>
                {/* Th√™m icon tr·∫°ng th√°i n·ªïi b·∫≠t */}
                <span
                  className={prod.is_featured ? "badge badge-featured" : "badge badge-normal"}
                  onClick={() => handleToggleFeatured(prod._id)}
                >
                  {prod.is_featured ? "N·ªîI B·∫¨T" : "TH∆Ø·ªúNG"}
                </span>

                <div className="actions">
                  <span className={`status ${prod.status === "ƒêang b√°n" ? "in-stock" :
                      prod.status === "H·∫øt h√†ng" ? "out-of-stock" :
                        "stopped"
                    }`}>
                    {prod.status === "ƒêang b√°n" && "üü¢ ƒêang b√°n"}
                    {prod.status === "H·∫øt h√†ng" && "üî¥ H·∫øt h√†ng"}
                    {prod.status === "Ng·ª´ng b√°n" && "‚ö™ Ng·ª´ng b√°n"}
                  </span>


                  <div className="icons" style={{ marginLeft: "15px" }}>
                    <FaEye
                      title="Xem chi ti·∫øt"
                      style={{ cursor: "pointer", color: "green" }}
                      onClick={() => navigate(`/products/${prod._id}`, { state: { reload: true } })}
                    />
                    <FaEdit
                      title="S·ª≠a"
                      style={{ cursor: "pointer", color: "blue" }}
                      onClick={() => navigate(`/products/edit/${prod._id}`)}
                    />
                    <FaTrash
                      title="Xo√°"
                      onClick={() => handleDeleteProduct(prod._id)}
                      style={{ color: "red", cursor: "pointer" }}
                    />
                  </div>
                  <button className="btn-import">Nh·∫≠p h√†ng</button>
                </div>

                <div className="updated-date">
                  C·∫≠p nh·∫≠t: {new Date(prod.updatedAt).toLocaleString("vi-VN")}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}
